var s = {"text":"<p>因为最近在工作中尝试了 <a href=\"https://github.com/webpack/webpack\">webpack</a>、<a href=\"https://github.com/facebook/react\">react</a>、<a href=\"https://github.com/reactjs/redux\">redux</a>、<a href=\"http://babeljs.io/docs/learn-es2015/\">es6</a> 技术栈，所以总结出了一套 <a href=\"https://github.com/xiaoyann/webpack-react-redux-es6-boilerplate\">boilerplate</a>，以便下次做项目时可以快速开始，并进行持续优化。对应的项目地址：<a href=\"https://github.com/xiaoyann/webpack-react-redux-es6-boilerplate\">webpack-react-redux-es6-boilerplate</a></p>\n<p>该项目的 webpack 配置做了不少优化，所以构建速度还不错。文章的最后还对使用 webpack 的问题及性能优化作出了总结。</p>\n<h2 id=\"-\">项目结构规划</h2>\n<p>每个模块相关的 css、img、js 文件都放在一起，比较直观，删除模块时也会方便许多。测试文件也同样放在一起，哪些模块有没有写测试，哪些测试应该一起随模块删除，一目了然。</p>\n<pre><code class=\"lang-bash\">build\n<span class=\"token operator\">|</span>-- webpack.config.js               <span class=\"token comment\" spellcheck=\"true\"># 公共配置</span>\n<span class=\"token operator\">|</span>-- webpack.dev.js                  <span class=\"token comment\" spellcheck=\"true\"># 开发配置</span>\n<span class=\"token operator\">|</span>-- webpack.release.js              <span class=\"token comment\" spellcheck=\"true\"># 发布配置</span>\ndocs                                <span class=\"token comment\" spellcheck=\"true\"># 项目文档</span>\nnode_modules                        \nsrc                                 <span class=\"token comment\" spellcheck=\"true\"># 项目源码</span>\n<span class=\"token operator\">|</span>-- conf                            <span class=\"token comment\" spellcheck=\"true\"># 配置文件</span>\n<span class=\"token operator\">|</span>-- pages                           <span class=\"token comment\" spellcheck=\"true\"># 页面目录</span>\n<span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>-- page1                       \n<span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>-- index.js                <span class=\"token comment\" spellcheck=\"true\"># 页面逻辑</span>\n<span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>-- index.scss              <span class=\"token comment\" spellcheck=\"true\"># 页面样式</span>\n<span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>-- img                     <span class=\"token comment\" spellcheck=\"true\"># 页面图片</span>\n<span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>-- xx.png          \n<span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>-- __tests__               <span class=\"token comment\" spellcheck=\"true\"># 测试文件</span>\n<span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>-- xx.js\n<span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>-- app.html                    <span class=\"token comment\" spellcheck=\"true\"># 入口页</span>\n<span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>-- app.js                      <span class=\"token comment\" spellcheck=\"true\"># 入口JS</span>\n<span class=\"token operator\">|</span>-- components                      <span class=\"token comment\" spellcheck=\"true\"># 组件目录</span>\n<span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>-- loading\n<span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>-- index.js\n<span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>-- index.scss\n<span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>-- __tests__               \n<span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>-- xx.js\n<span class=\"token operator\">|</span>-- js\n<span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>-- actions\n<span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>-- index.js\n<span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>-- __tests__               \n<span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>-- xx.js\n<span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>-- reducers \n<span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>-- index.js\n<span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>-- __tests__               \n<span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>-- xx.js\n<span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>-- xx.js               \n<span class=\"token operator\">|</span>-- css                             <span class=\"token comment\" spellcheck=\"true\"># 公共CSS目录</span>\n<span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>-- common.scss\n<span class=\"token operator\">|</span>-- img                             <span class=\"token comment\" spellcheck=\"true\"># 公共图片目录</span>\n<span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>-- xx.png\ntests                               <span class=\"token comment\" spellcheck=\"true\"># 其他测试文件</span>\npackage.json                        \nREADNE.md\n</code></pre>\n<h2 id=\"-\">要完成的功能</h2>\n<ol>\n<li>编译 jsx、es6、scss 等资源</li>\n<li>自动引入静态资源到相应 html 页面</li>\n<li>实时编译和刷新浏览器</li>\n<li>按指定模块化规范自动包装模块</li>\n<li>自动给 css 添加浏览器内核前缀</li>\n<li>按需打包合并 js、css</li>\n<li>压缩 js、css、html</li>\n<li>图片路径处理、压缩、CssSprite</li>\n<li>对文件使用 hash 命名，做强缓存</li>\n<li>语法检查</li>\n<li>全局替换指定字符串</li>\n<li>本地接口模拟服务</li>\n<li>发布到远端机</li>\n</ol>\n<p>针对以上的几点功能，接下来将一步一步的来完成这个 <a href=\"https://github.com/xiaoyann/webpack-react-redux-es6-boilerplate\">boilerplate</a> 项目， 并记录下每一步的要点。</p>\n<h3 id=\"-\">准备工作</h3>\n<p>1、根据前面的项目结构规划创建项目骨架</p>\n<pre><code class=\"lang-bash\">$ <span class=\"token function\">make</span> <span class=\"token function\">dir</span> webpack-react-redux-es6-boilerplate\n$ <span class=\"token function\">cd</span> webpack-react-redux-es6-boilerplate\n$ <span class=\"token function\">mkdir</span> build docs src mock tests\n$ <span class=\"token function\">touch</span> build/webpack.config.js build/webpack.dev.js build/webpack.release.js\n// 创建 package.json\n$ <span class=\"token function\">npm</span> init\n$ <span class=\"token punctuation\">..</span>.\n<span class=\"token comment\" spellcheck=\"true\"># sdfsdfs</span>\n$ <span class=\"token function\">npm</span> init\n</code></pre>\n<p>2、安装最基本的几个 npm 包</p>\n<pre><code class=\"lang-bash\">$ <span class=\"token function\">npm</span> i webpack webpack-dev-server --save-dev\n$ <span class=\"token function\">npm</span> i react react-dom react-router redux react-redux redux-thunk --save\n</code></pre>\n<p>3、编写示例代码，最终代码直接查看 <a href=\"https://github.com/xiaoyann/webpack-react-redux-es6-boilerplate/tree/master/src/pages\">boilerplate</a></p>\n<p>4、根据 <a href=\"http://webpack.github.io/docs/\">webpack</a> 文档编写最基本的 webpack 配置，直接使用 NODE API 的方式</p>\n<pre><code class=\"lang-javascript\"><span class=\"token comment\" spellcheck=\"true\">/* webpack.config.js */</span>\n\n<span class=\"token keyword\">var</span> webpack <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'webpack'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// 辅助函数</span>\n<span class=\"token keyword\">var</span> utils <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./utils'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> fullPath  <span class=\"token operator\">=</span> utils<span class=\"token punctuation\">.</span>fullPath<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> pickFiles <span class=\"token operator\">=</span> utils<span class=\"token punctuation\">.</span>pickFiles<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// 项目根路径</span>\n<span class=\"token keyword\">var</span> ROOT_PATH <span class=\"token operator\">=</span> <span class=\"token function\">fullPath</span><span class=\"token punctuation\">(</span><span class=\"token string\">'../'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\" spellcheck=\"true\">// 项目源码路径</span>\n<span class=\"token keyword\">var</span> SRC_PATH <span class=\"token operator\">=</span> ROOT_PATH <span class=\"token operator\">+</span> <span class=\"token string\">'/src'</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\" spellcheck=\"true\">// 产出路径</span>\n<span class=\"token keyword\">var</span> DIST_PATH <span class=\"token operator\">=</span> ROOT_PATH <span class=\"token operator\">+</span> <span class=\"token string\">'/dist'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// 是否是开发环境</span>\n<span class=\"token keyword\">var</span> __DEV__ <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span>NODE_ENV <span class=\"token operator\">!==</span> <span class=\"token string\">'production'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// conf</span>\n<span class=\"token keyword\">var</span> alias <span class=\"token operator\">=</span> <span class=\"token function\">pickFiles</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  id<span class=\"token punctuation\">:</span> <span class=\"token regex\">/(conf\\/[^\\/]+).js$/</span><span class=\"token punctuation\">,</span>\n  pattern<span class=\"token punctuation\">:</span> SRC_PATH <span class=\"token operator\">+</span> <span class=\"token string\">'/conf/*.js'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">/</span><span class=\"token operator\">/</span> components\nalias <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span>alias<span class=\"token punctuation\">,</span> <span class=\"token function\">pickFiles</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  id<span class=\"token punctuation\">:</span> <span class=\"token regex\">/(components\\/[^\\/]+)/</span><span class=\"token punctuation\">,</span>\n  pattern<span class=\"token punctuation\">:</span> SRC_PATH <span class=\"token operator\">+</span> <span class=\"token string\">'/components/*/index.js'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// reducers</span>\nalias <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span>alias<span class=\"token punctuation\">,</span> <span class=\"token function\">pickFiles</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  id<span class=\"token punctuation\">:</span> <span class=\"token regex\">/(reducers\\/[^\\/]+).js/</span><span class=\"token punctuation\">,</span>\n  pattern<span class=\"token punctuation\">:</span> SRC_PATH <span class=\"token operator\">+</span> <span class=\"token string\">'/js/reducers/*'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// actions</span>\nalias <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span>alias<span class=\"token punctuation\">,</span> <span class=\"token function\">pickFiles</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  id<span class=\"token punctuation\">:</span> <span class=\"token regex\">/(actions\\/[^\\/]+).js/</span><span class=\"token punctuation\">,</span>\n  pattern<span class=\"token punctuation\">:</span> SRC_PATH <span class=\"token operator\">+</span> <span class=\"token string\">'/js/actions/*'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">var</span> config <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  context<span class=\"token punctuation\">:</span> SRC_PATH<span class=\"token punctuation\">,</span>\n  entry<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    app<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'./pages/app.js'</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  output<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    path<span class=\"token punctuation\">:</span> DIST_PATH<span class=\"token punctuation\">,</span>\n    filename<span class=\"token punctuation\">:</span> <span class=\"token string\">'js/bundle.js'</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  module<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  resolve<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    alias<span class=\"token punctuation\">:</span> alias\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">webpack<span class=\"token punctuation\">.</span>DefinePlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token comment\" spellcheck=\"true\">// http://stackoverflow.com/questions/30030031/passing-environment-dependent-variables-in-webpack</span>\n      <span class=\"token string\">\"process.env.NODE_ENV\"</span><span class=\"token punctuation\">:</span> JSON<span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span>NODE_ENV <span class=\"token operator\">||</span> <span class=\"token string\">'development'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> config<span class=\"token punctuation\">;</span>\n</code></pre>\n<pre><code class=\"lang-javascript\"><span class=\"token comment\" spellcheck=\"true\">/* webpack.dev.js */</span>\n\n<span class=\"token keyword\">var</span> webpack <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'webpack'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> WebpackDevServer <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'webpack-dev-server'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> config <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./webpack.config'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> utils <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./utils'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> PORT <span class=\"token operator\">=</span> <span class=\"token number\">8080</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> HOST <span class=\"token operator\">=</span> utils<span class=\"token punctuation\">.</span><span class=\"token function\">getIP</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> args <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> hot <span class=\"token operator\">=</span> args<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">'--hot'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> deploy <span class=\"token operator\">=</span> args<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">'--deploy'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// 本地环境静态资源路径</span>\n<span class=\"token keyword\">var</span> localPublicPath <span class=\"token operator\">=</span> <span class=\"token string\">'http://'</span> <span class=\"token operator\">+</span> HOST <span class=\"token operator\">+</span> <span class=\"token string\">':'</span> <span class=\"token operator\">+</span> PORT <span class=\"token operator\">+</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">;</span>\n\nconfig<span class=\"token punctuation\">.</span>output<span class=\"token punctuation\">.</span>publicPath <span class=\"token operator\">=</span> localPublicPath<span class=\"token punctuation\">;</span> \nconfig<span class=\"token punctuation\">.</span>entry<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span><span class=\"token function\">unshift</span><span class=\"token punctuation\">(</span><span class=\"token string\">'webpack-dev-server/client?'</span> <span class=\"token operator\">+</span> localPublicPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">WebpackDevServer</span><span class=\"token punctuation\">(</span><span class=\"token function\">webpack</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  hot<span class=\"token punctuation\">:</span> hot<span class=\"token punctuation\">,</span>\n  inline<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  compress<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  stats<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    chunks<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    children<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    colors<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\" spellcheck=\"true\">// Set this as true if you want to access dev server from arbitrary url.</span>\n  <span class=\"token comment\" spellcheck=\"true\">// This is handy if you are using a html5 router.</span>\n  historyApiFallback<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span>PORT<span class=\"token punctuation\">,</span> HOST<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>localPublicPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>上面的配置写好后就可以开始构建了</p>\n<pre><code class=\"lang-bash\">$ node build/webpack.dev.js\n</code></pre>\n<p>因为项目中使用了 jsx、es6、scss，所以还要添加相应的 loader，否则会报如下类似错误：</p>\n<pre><code class=\"lang-javascript\">ERROR <span class=\"token keyword\">in</span> <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>src<span class=\"token operator\">/</span>pages<span class=\"token operator\">/</span>app<span class=\"token punctuation\">.</span>js\nModule parse failed<span class=\"token punctuation\">:</span> <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>xiaoyan<span class=\"token operator\">/</span>working<span class=\"token operator\">/</span>webpack<span class=\"token operator\">-</span>react<span class=\"token operator\">-</span>redux<span class=\"token operator\">-</span>es6<span class=\"token operator\">-</span>boilerplate<span class=\"token operator\">/</span>src<span class=\"token operator\">/</span>pages<span class=\"token operator\">/</span>app<span class=\"token punctuation\">.</span>js Unexpected token <span class=\"token punctuation\">(</span><span class=\"token number\">18</span><span class=\"token punctuation\">:</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span>\nYou may need an appropriate loader to handle <span class=\"token keyword\">this</span> file type<span class=\"token punctuation\">.</span>\n</code></pre>\n<h3 id=\"-jsx-es6-scss-\">编译 jsx、es6、scss 等资源</h3>\n<ul>\n<li>使用 <a href=\"http://babeljs.io/\">bael</a> 和 <a href=\"https://github.com/babel/babel-loader\">babel-loader</a> 编译 jsx、es6</li>\n<li>安装插件: <a href=\"http://babeljs.io/docs/plugins/preset-es2015/\">babel-preset-es2015</a> 用于解析 <code>es6</code></li>\n<li>安装插件：<a href=\"http://babeljs.io/docs/plugins/preset-react/\">babel-preset-react</a> 用于解析 <code>jsx</code></li>\n</ul>\n<pre><code class=\"lang-javascript\"><span class=\"token comment\" spellcheck=\"true\">// 首先需要安装 babel </span>\n$ npm i babel<span class=\"token operator\">-</span>core <span class=\"token operator\">--</span>save<span class=\"token operator\">-</span>dev\n<span class=\"token comment\" spellcheck=\"true\">// 安装插件 </span>\n$ npm i babel<span class=\"token operator\">-</span>preset<span class=\"token operator\">-</span>es2015 babel<span class=\"token operator\">-</span>preset<span class=\"token operator\">-</span>react <span class=\"token operator\">--</span>save<span class=\"token operator\">-</span>dev\n<span class=\"token comment\" spellcheck=\"true\">// 安装 loader</span>\n$ npm i babel<span class=\"token operator\">-</span>loader <span class=\"token operator\">--</span>save<span class=\"token operator\">-</span>dev\n</code></pre>\n<p>在项目根目录创建 <code>.babelrc</code> 文件:</p>\n<pre><code class=\"lang-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"presets\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"es2015\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>在 webpack.config.js 里添加：</p>\n<pre><code class=\"lang-javascript\"><span class=\"token comment\" spellcheck=\"true\">// 使用缓存</span>\n<span class=\"token keyword\">var</span> CACHE_PATH <span class=\"token operator\">=</span> ROOT_PATH <span class=\"token operator\">+</span> <span class=\"token string\">'/cache'</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\" spellcheck=\"true\">// loaders</span>\nconfig<span class=\"token punctuation\">.</span>module<span class=\"token punctuation\">.</span>loaders <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\" spellcheck=\"true\">// 使用 babel 编译 jsx、es6</span>\nconfig<span class=\"token punctuation\">.</span>module<span class=\"token punctuation\">.</span>loaders<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  test<span class=\"token punctuation\">:</span> <span class=\"token regex\">/\\.js$/</span><span class=\"token punctuation\">,</span>\n  exclude<span class=\"token punctuation\">:</span> <span class=\"token regex\">/node_modules/</span><span class=\"token punctuation\">,</span>\n  include<span class=\"token punctuation\">:</span> SRC_PATH<span class=\"token punctuation\">,</span>\n  <span class=\"token comment\" spellcheck=\"true\">// 这里使用 loaders ，因为后面还需要添加 loader</span>\n  loaders<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'babel?cacheDirectory='</span> <span class=\"token operator\">+</span> CACHE_PATH<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>接下来使用 <a href=\"https://github.com/jtangelder/sass-loader\">sass-loader</a> 编译 sass:</p>\n<pre><code class=\"lang-bash\">$ <span class=\"token function\">npm</span> i sass-loader node-sass css-loader style-loader --save-dev\n</code></pre>\n<ul>\n<li><a href=\"https://github.com/webpack/css-loader\">css-loader</a> 用于将 css 当做模块一样来 <code>import</code></li>\n<li><a href=\"https://github.com/webpack/style-loader\">style-loader</a> 用于自动将 css 添加到页面</li>\n</ul>\n<p>在 webpack.config.js 里添加：</p>\n<pre><code class=\"lang-javascript\"><span class=\"token comment\" spellcheck=\"true\">// 编译 sass</span>\nconfig<span class=\"token punctuation\">.</span>module<span class=\"token punctuation\">.</span>loaders<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  test<span class=\"token punctuation\">:</span> <span class=\"token regex\">/\\.(scss|css)$/</span><span class=\"token punctuation\">,</span>\n  loaders<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'style'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'css'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sass'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h3 id=\"-html-\">自动引入静态资源到相应 html 页面</h3>\n<ul>\n<li>使用 <a href=\"https://github.com/ampedandwired/html-webpack-plugin\">html-webpack-plugin</a></li>\n</ul>\n<pre><code class=\"lang-javascript\">$ npm i html<span class=\"token operator\">-</span>webpack<span class=\"token operator\">-</span>plugin <span class=\"token operator\">--</span>save<span class=\"token operator\">-</span>dev\n</code></pre>\n<p>在 webpack.config.js 里添加：</p>\n<pre><code class=\"lang-javascript\"><span class=\"token comment\" spellcheck=\"true\">// html 页面</span>\n<span class=\"token keyword\">var</span> HtmlwebpackPlugin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'html-webpack-plugin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconfig<span class=\"token punctuation\">.</span>plugins<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>\n  <span class=\"token keyword\">new</span> <span class=\"token class-name\">HtmlwebpackPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    filename<span class=\"token punctuation\">:</span> <span class=\"token string\">'index.html'</span><span class=\"token punctuation\">,</span>\n    chunks<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'app'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    template<span class=\"token punctuation\">:</span> SRC_PATH <span class=\"token operator\">+</span> <span class=\"token string\">'/pages/app.html'</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>至此，整个项目就可以正常跑起来了</p>\n<pre><code class=\"lang-bash\">$ node build/webpack.dev.js\n</code></pre>\n<h3 id=\"-\">实时编译和刷新浏览器</h3>\n<p>完成前面的配置后，项目就已经可以实时编译和自动刷新浏览器了。接下来就配置下热更新，使用 <a href=\"https://github.com/gaearon/react-hot-loader\">react-hot-loader</a>：</p>\n<pre><code class=\"lang-javascript\">$ npm i react<span class=\"token operator\">-</span>hot<span class=\"token operator\">-</span>loader <span class=\"token operator\">--</span>save<span class=\"token operator\">-</span>dev\n</code></pre>\n<p>因为热更新只需要在开发时使用，所以在 webpack.dev.config 里添加如下代码：</p>\n<pre><code class=\"lang-javascript\"><span class=\"token comment\" spellcheck=\"true\">// 开启热替换相关设置</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hot <span class=\"token operator\">===</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  config<span class=\"token punctuation\">.</span>entry<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span><span class=\"token function\">unshift</span><span class=\"token punctuation\">(</span><span class=\"token string\">'webpack/hot/only-dev-server'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\" spellcheck=\"true\">// 注意这里 loaders[0] 是处理 .js 文件的 loader</span>\n  config<span class=\"token punctuation\">.</span>module<span class=\"token punctuation\">.</span>loaders<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>loaders<span class=\"token punctuation\">.</span><span class=\"token function\">unshift</span><span class=\"token punctuation\">(</span><span class=\"token string\">'react-hot'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  config<span class=\"token punctuation\">.</span>plugins<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">webpack<span class=\"token punctuation\">.</span>HotModuleReplacementPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>执行下面的命令，并尝试更改 js、css：</p>\n<pre><code class=\"lang-bash\">$ node build/webpack.dev.js --hot\n</code></pre>\n<h3 id=\"-\">按指定模块化规范自动包装模块</h3>\n<p>webpack 支持 CommonJS、AMD 规范，具体如何使用直接查看文档</p>\n<h3 id=\"-css-\">自动给 css 添加浏览器内核前缀</h3>\n<p>使用 <a href=\"https://github.com/postcss/postcss-loader\">postcss-loader</a></p>\n<pre><code class=\"lang-bash\"><span class=\"token function\">npm</span> i postcss-loader precss autoprefixer --save-dev\n</code></pre>\n<p>在 webpack.config.js 里添加：</p>\n<pre><code class=\"lang-javascript\"><span class=\"token comment\" spellcheck=\"true\">// 编译 sass</span>\nconfig<span class=\"token punctuation\">.</span>module<span class=\"token punctuation\">.</span>loaders<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  test<span class=\"token punctuation\">:</span> <span class=\"token regex\">/\\.(scss|css)$/</span><span class=\"token punctuation\">,</span>\n  loaders<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'style'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'css'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sass'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'postcss'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// css autoprefix</span>\n<span class=\"token keyword\">var</span> precss <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'precss'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> autoprefixer <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'autoprefixer'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconfig<span class=\"token punctuation\">.</span>postcss <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>precss<span class=\"token punctuation\">,</span> autoprefixer<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3 id=\"-js-css\">打包合并 js、css</h3>\n<p>webpack 默认将所有模块都打包成一个 bundle，并提供了 <a href=\"http://webpack.github.io/docs/code-splitting.html\">Code Splitting</a> 功能便于我们按需拆分。在这个例子里我们把框架和库都拆分出来：</p>\n<p>在 webpack.config.js 添加：</p>\n<pre><code class=\"lang-javascript\">config<span class=\"token punctuation\">.</span>entry<span class=\"token punctuation\">.</span>lib <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token string\">'react'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'react-dom'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'react-router'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'redux'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'react-redux'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'redux-thunk'</span>\n<span class=\"token punctuation\">]</span>\n\nconfig<span class=\"token punctuation\">.</span>output<span class=\"token punctuation\">.</span>filename <span class=\"token operator\">=</span> <span class=\"token string\">'js/[name].js'</span><span class=\"token punctuation\">;</span>\n\nconfig<span class=\"token punctuation\">.</span>plugins<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">webpack<span class=\"token punctuation\">.</span>optimize<span class=\"token punctuation\">.</span>CommonsChunkPlugin</span><span class=\"token punctuation\">(</span><span class=\"token string\">'lib'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'js/lib.js'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// 别忘了将 lib 添加到 html 页面</span>\n<span class=\"token comment\" spellcheck=\"true\">// chunks: ['app', 'lib']</span>\n</code></pre>\n<p>如何拆分 CSS：<a href=\"http://webpack.github.io/docs/stylesheets.html\">separate css bundle</a></p>\n<h3 id=\"-js-css-html-png-\">压缩 js、css、html、png 图片</h3>\n<p>压缩资源最好只在生产环境时使用</p>\n<pre><code class=\"lang-javascript\"><span class=\"token comment\" spellcheck=\"true\">// 压缩 js、css</span>\nconfig<span class=\"token punctuation\">.</span>plugins<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">webpack<span class=\"token punctuation\">.</span>optimize<span class=\"token punctuation\">.</span>UglifyJsPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        compress<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n            warnings<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// 压缩 html</span>\n<span class=\"token comment\" spellcheck=\"true\">// html 页面</span>\n<span class=\"token keyword\">var</span> HtmlwebpackPlugin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'html-webpack-plugin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconfig<span class=\"token punctuation\">.</span>plugins<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>\n  <span class=\"token keyword\">new</span> <span class=\"token class-name\">HtmlwebpackPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    filename<span class=\"token punctuation\">:</span> <span class=\"token string\">'index.html'</span><span class=\"token punctuation\">,</span>\n    chunks<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'app'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'lib'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    template<span class=\"token punctuation\">:</span> SRC_PATH <span class=\"token operator\">+</span> <span class=\"token string\">'/pages/app.html'</span><span class=\"token punctuation\">,</span>\n    minify<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      collapseWhitespace<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      collapseInlineTagWhitespace<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      removeRedundantAttributes<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      removeEmptyAttributes<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      removeScriptTypeAttributes<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      removeStyleLinkTypeAttributes<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      removeComments<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h3 id=\"-csssprite\">图片路径处理、压缩、CssSprite</h3>\n<ul>\n<li>压缩图片使用 <a href=\"https://github.com/tcoopman/image-webpack-loader\">image-webpack-loader</a></li>\n<li>图片路径处理使用 <a href=\"https://github.com/webpack/url-loader\">url-loader</a></li>\n</ul>\n<pre><code class=\"lang-bash\">$ <span class=\"token function\">npm</span> i url-loader image-webpack-loader --save-dev\n</code></pre>\n<p>在 webpack.config.js 里添加：</p>\n<pre><code class=\"lang-javascript\"><span class=\"token comment\" spellcheck=\"true\">// 图片路径处理，压缩</span>\nconfig<span class=\"token punctuation\">.</span>module<span class=\"token punctuation\">.</span>loaders<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  test<span class=\"token punctuation\">:</span> <span class=\"token regex\">/\\.(?:jpg|gif|png|svg)$/</span><span class=\"token punctuation\">,</span>\n  loaders<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">'url?limit=8000&amp;name=img/[hash].[ext]'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'image-webpack'</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>雪碧图处理：<a href=\"http://kyon-df.com/2016/03/16/webpack_auto_sprites/\">webpack_auto_sprites</a></p>\n<h3 id=\"-hash-\">对文件使用 hash 命名，做强缓存</h3>\n<p>根据 <a href=\"http://webpack.github.io/docs/long-term-caching.html\">docs</a>，在产出文件命名中加上 <code>[hash]</code></p>\n<pre><code class=\"lang-javascript\">config<span class=\"token punctuation\">.</span>output<span class=\"token punctuation\">.</span>filename <span class=\"token operator\">=</span> <span class=\"token string\">'js/[name].[hash].js'</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h3 id=\"-\">本地接口模拟服务</h3>\n<pre><code class=\"lang-bash\">// 直接使用 epxress 创建一个本地服务\n$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> epxress --save-dev\n$ <span class=\"token function\">mkdir</span> mock <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">cd</span> mock\n$ <span class=\"token function\">touch</span> app.js\n</code></pre>\n<pre><code class=\"lang-javascript\"><span class=\"token keyword\">var</span> express <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'express'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// 设置跨域访问，方便开发</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token string\">'*'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> next<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Access-Control-Allow-Origin'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'*'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// 具体接口设置</span>\napp<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api/test'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> code<span class=\"token punctuation\">:</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">:</span> <span class=\"token string\">'your data'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> server <span class=\"token operator\">=</span> app<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">3000</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> host <span class=\"token operator\">=</span> server<span class=\"token punctuation\">.</span><span class=\"token function\">address</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> port <span class=\"token operator\">=</span> server<span class=\"token punctuation\">.</span><span class=\"token function\">address</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>port<span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Mock server listening at http://%s:%s'</span><span class=\"token punctuation\">,</span> host<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<pre><code class=\"lang-bash\">// 启动服务，如果用 PM2 管理会更方便，增加接口不用自己手动重启服务\n$ node app.js <span class=\"token operator\">&amp;</span>\n</code></pre>\n<h3 id=\"-\">发布到远端机</h3>\n<p>写一个 deploy 插件，使用 <a href=\"https://github.com/mscdex/node-ftp\">ftp</a> 上传文件</p>\n<pre><code class=\"lang-bash\">$ <span class=\"token function\">npm</span> i <span class=\"token function\">ftp</span> --save-dev\n$ <span class=\"token function\">touch</span> build/deploy.plugin.js\n</code></pre>\n<pre><code class=\"lang-javascript\"><span class=\"token comment\" spellcheck=\"true\">// build/deploy.plugin.js</span>\n\n<span class=\"token keyword\">var</span> Client <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ftp'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> client <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Client</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// 待上传的文件</span>\n<span class=\"token keyword\">var</span> __assets__ <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\" spellcheck=\"true\">// 是否已连接</span>\n<span class=\"token keyword\">var</span> __connected__ <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> __conf__ <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">uploadFile</span><span class=\"token punctuation\">(</span>startTime<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> file <span class=\"token operator\">=</span> __assets__<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\" spellcheck=\"true\">// 没有文件就关闭连接</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>file<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\" spellcheck=\"true\">// 开始上传</span>\n  client<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span>source<span class=\"token punctuation\">,</span> file<span class=\"token punctuation\">.</span>remotePath<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\" spellcheck=\"true\">// 本次上传耗时</span>\n    <span class=\"token keyword\">var</span> timming <span class=\"token operator\">=</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> startTime<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'error '</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'upload fail -'</span><span class=\"token punctuation\">,</span> file<span class=\"token punctuation\">.</span>remotePath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'upload success -'</span><span class=\"token punctuation\">,</span> file<span class=\"token punctuation\">.</span>remotePath<span class=\"token punctuation\">,</span> timming <span class=\"token operator\">+</span> <span class=\"token string\">'ms'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\" spellcheck=\"true\">// 每次上传之后检测下是否还有文件需要上传，如果没有就关闭连接</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>__assets__<span class=\"token punctuation\">.</span>length <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      client<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">uploadFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// 发起连接</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>conf<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>__connected__<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    client<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>__conf__<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// 连接成功</span>\nclient<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ready'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  __connected__ <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">uploadFile</span><span class=\"token punctuation\">(</span>Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// 连接已关闭</span>\nclient<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'close'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  __connected__ <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\" spellcheck=\"true\">// 连接关闭后，如果发现还有文件需要上传就重新发起连接</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>__assets__<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/**\n * [deploy description]\n * @param  {Array}   assets  待 deploy 的文件\n * file.source      buffer\n * file.remotePath  path\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">deployWithFtp</span><span class=\"token punctuation\">(</span>conf<span class=\"token punctuation\">,</span> assets<span class=\"token punctuation\">,</span> callback<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  __conf__ <span class=\"token operator\">=</span> conf<span class=\"token punctuation\">;</span>\n  __assets__ <span class=\"token operator\">=</span> __assets__<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>assets<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n\n<span class=\"token keyword\">var</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/**\n * [DeployPlugin description]\n * @param {Array} options\n * option.reg \n * option.to \n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">DeployPlugin</span><span class=\"token punctuation\">(</span>conf<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>conf <span class=\"token operator\">=</span> conf<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>options <span class=\"token operator\">=</span> options<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nDeployPlugin<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>apply <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>compiler<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> conf <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>conf<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> options <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">;</span>\n  compiler<span class=\"token punctuation\">.</span><span class=\"token function\">plugin</span><span class=\"token punctuation\">(</span><span class=\"token string\">'done'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>stats<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> files <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> assets <span class=\"token operator\">=</span> stats<span class=\"token punctuation\">.</span>compilation<span class=\"token punctuation\">.</span>assets<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> name <span class=\"token keyword\">in</span> assets<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      options<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>cfg<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cfg<span class=\"token punctuation\">.</span>reg<span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          files<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            localPath<span class=\"token punctuation\">:</span> name<span class=\"token punctuation\">,</span>\n            remotePath<span class=\"token punctuation\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>cfg<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            source<span class=\"token punctuation\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Buffer</span><span class=\"token punctuation\">(</span>assets<span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">source</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">deployWithFtp</span><span class=\"token punctuation\">(</span>conf<span class=\"token punctuation\">,</span> files<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> DeployPlugin<span class=\"token punctuation\">;</span>\n</code></pre>\n<p>运用上面写的插件，实现同时在本地、测试环境开发，并能自动刷新和热更新。在 webpack.dev.js 里添加：</p>\n<pre><code class=\"lang-javascript\"><span class=\"token keyword\">var</span> DeployPlugin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./deploy.plugin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\" spellcheck=\"true\">// 是否发布到测试环境</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>deploy <span class=\"token operator\">===</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  config<span class=\"token punctuation\">.</span>plugins<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">DeployPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      user<span class=\"token punctuation\">:</span> <span class=\"token string\">'username'</span><span class=\"token punctuation\">,</span>\n      password<span class=\"token punctuation\">:</span> <span class=\"token string\">'password'</span><span class=\"token punctuation\">,</span> \n      host<span class=\"token punctuation\">:</span> <span class=\"token string\">'your host'</span><span class=\"token punctuation\">,</span> \n      keepalive<span class=\"token punctuation\">:</span> <span class=\"token number\">10000000</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> \n    <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>reg<span class=\"token punctuation\">:</span> <span class=\"token regex\">/html$/</span><span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">:</span> <span class=\"token string\">'/xxx/xxx/xxx/app/views/'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>在这个例子里，只将 html 文件发布到测试环境，静态资源还是使用的本地的webpack-dev-server，所以热更新、自动刷新还是可以正常使用</p>\n<p>其他的发布插件：</p>\n<ul>\n<li><a href=\"https://github.com/iAmHades/sftp-webpack-plugin\">sftp-webpack-plugin</a></li>\n<li><a href=\"https://github.com/sqhtiamo/webpack-sftp-client\">webpack-sftp-client</a></li>\n</ul>\n<h2 id=\"webpack-\">webpack 问题及优化</h2>\n<h3 id=\"-chunkhash-\">改变代码时所有的 chunkhash 都会改变</h3>\n<p>在这个项目中我们把框架和库都打包到了一个 chunk，这部分我们自己是不会修改的，但是当我们更改业务代码时这个 chunk 的 hash 却同时发生了变化。这将导致上线时用户又得重新下载这个根本没有变化的文件。</p>\n<p>所以我们不能使用 webpack 提供的 chunkhash 来命名文件，那我们自己根据文件内容来计算 hash 命名不就好了吗。\n开发的时候不需要使用 hash，或者使用 hash 也没问题，最终产出时我们使用自己的方式重新命名：</p>\n<pre><code class=\"lang-bash\">$ <span class=\"token function\">npm</span> i md5 --save-dev\n$ <span class=\"token function\">touch</span> build/rename.plugin.js\n</code></pre>\n<pre><code class=\"lang-javascript\"><span class=\"token comment\" spellcheck=\"true\">// rename.plugin.js</span>\n\n<span class=\"token keyword\">var</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> md5 <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'md5'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">RenamePlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span>\n\nRenamePlugin<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>apply <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>compiler<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  compiler<span class=\"token punctuation\">.</span><span class=\"token function\">plugin</span><span class=\"token punctuation\">(</span><span class=\"token string\">'done'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>stats<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> htmlFiles <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> hashFiles <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> assets <span class=\"token operator\">=</span> stats<span class=\"token punctuation\">.</span>compilation<span class=\"token punctuation\">.</span>assets<span class=\"token punctuation\">;</span>\n\n    Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>assets<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>fileName<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> file <span class=\"token operator\">=</span> assets<span class=\"token punctuation\">[</span>fileName<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token regex\">/\\.(css|js)$/</span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>fileName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> hash <span class=\"token operator\">=</span> <span class=\"token function\">md5</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">source</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">var</span> newName <span class=\"token operator\">=</span> fileName<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\">/(.js|.css)$/</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'.'</span> <span class=\"token operator\">+</span> hash <span class=\"token operator\">+</span> <span class=\"token string\">'$1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        hashFiles<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n          originName<span class=\"token punctuation\">:</span> fileName<span class=\"token punctuation\">,</span>\n          hashName<span class=\"token punctuation\">:</span> newName\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        fs<span class=\"token punctuation\">.</span><span class=\"token function\">rename</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span>existsAt<span class=\"token punctuation\">,</span> file<span class=\"token punctuation\">.</span>existsAt<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span>fileName<span class=\"token punctuation\">,</span> newName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> \n      <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token regex\">/\\.html$/</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        htmlFiles<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>fileName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    htmlFiles<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>fileName<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> file <span class=\"token operator\">=</span> assets<span class=\"token punctuation\">[</span>fileName<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">var</span> contents <span class=\"token operator\">=</span> file<span class=\"token punctuation\">.</span><span class=\"token function\">source</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      hashFiles<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        contents <span class=\"token operator\">=</span> contents<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">.</span>originName<span class=\"token punctuation\">,</span> item<span class=\"token punctuation\">.</span>hashName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      fs<span class=\"token punctuation\">.</span><span class=\"token function\">writeFile</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span>existsAt<span class=\"token punctuation\">,</span> contents<span class=\"token punctuation\">,</span> <span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> RenamePlugin<span class=\"token punctuation\">;</span>\n</code></pre>\n<p>在 webpack.release.js 里添加：</p>\n<pre><code class=\"lang-javascript\"><span class=\"token comment\" spellcheck=\"true\">// webpack.release.js</span>\n\n<span class=\"token keyword\">var</span> RenamePlugin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./rename.plugin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconfig<span class=\"token punctuation\">.</span>plugins<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">RenamePlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>最后也推荐使用自己的方式，根据最终文件内容计算 hash，因为这样无论谁发布代码，或者无论在哪台机器上发布，计算出来的 hash 都是一样的。不会因为下次上线换了台机器就改变了不需要改变的 hash。</p>\n<h5 id=\"2016-07-20-20-34-46-\">2016年07月20日20:34:46 更新：</h5>\n<p>上面的关于hash的说法有点武断了，抱歉。</p>\n<p>关于这个问题有两个点需要知道：</p>\n<p>1、 webpack 会根据模块第一次被引用的顺序来将模块放到一个数组里面，模块 id 就是它在数组中的位置。比如下面这个模块的 id 是 3, 如果这个模块第一次被引用的顺序变了，它就不是 3 了，所以最终文件的内容还是可能会发生不必要的改变。也就是说，即使我们使用自己的方式计算 hash，还是没有彻底解决这个问题。</p>\n<pre><code class=\"lang-javascript\"><span class=\"token comment\" spellcheck=\"true\">/* 3 */</span>\n<span class=\"token comment\" spellcheck=\"true\">/***/</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>module<span class=\"token punctuation\">,</span> exports<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token string\">'module is '</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/***/</span> <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>2、我们使用webpack就不需要再使用其他的模块加载器，因为webpack自己实现了。这块代码保留了一份 chunk map，而这块代码被打包到了 lib。也就是说 lib 的内容会因为我们增加 chunk，或减少 chunk 而变，尤其是使用了 webpack hash 后，只要其他代码的内容变了，map 里的 hash 随着更新，lib 的内容又得变了，而这都不是我们期望的。坑啊。。。。。。。。</p>\n<pre><code class=\"lang-javascript\"><span class=\"token comment\" spellcheck=\"true\">/******/</span>            script<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> __webpack_require__<span class=\"token punctuation\">.</span>p <span class=\"token operator\">+</span> <span class=\"token string\">\"\"</span> <span class=\"token operator\">+</span> chunkId <span class=\"token operator\">+</span> <span class=\"token string\">\".\"</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"app\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">[</span>chunkId<span class=\"token punctuation\">]</span><span class=\"token operator\">||</span>chunkId<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\".\"</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"f829bbd875a74dae32a2\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">[</span>chunkId<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">\".js\"</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>3、我们使用自己计算 hash 重命名产出文件有可能在使用异步加载时造成坑，因为webpack保留chunk map是为了异步加载能映射到正确的文件，但我们把名字给改了。衰。。。。。。。。</p>\n<h4 id=\"2016-07-21-11-44-08-\">2016年07月21日11:44:08 更新：</h4>\n<p>看了下这个 <a href=\"https://github.com/webpack/webpack/issues/1315\">issue</a>，这个问题已经算是完美解决了：</p>\n<p>1、 针对数字索引module id，解决方法有:</p>\n<ul>\n<li>使用<a href=\"http://webpack.github.io/docs/configuration.html#recordspath-recordsinputpath-recordsoutputpath\">recordsPath option</a>记录每次编译的结果，也就是知道哪些 ID 被使用了</li>\n<li>不再使用数字索引做 module id，而使用 hash name，这也是社区上都赞成并希望的支持的方式，经过测试这种方式并不会对文件的大小造成大的影响。而且webpack已经完成了一个<a href=\"https://github.com/webpack/webpack/blob/master/lib/HashedModuleIdsPlugin.js\">插件</a>来支持，会在2.0正式发布</li>\n</ul>\n<p>2、针对 chunk map 那段代码，抽取出来就好了，插件 <a href=\"https://github.com/diurnalist/chunk-manifest-webpack-plugin\">https://github.com/diurnalist/chunk-manifest-webpack-plugin</a></p>\n<ul>\n<li><a href=\"https://github.com/webpack/webpack/issues/1150\">github issue 对这个问题的讨论</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000005969643\">使用webpack的dll功能解决这个问题</a></li>\n</ul>\n"};
console.log(s.text);